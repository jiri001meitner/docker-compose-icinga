x-icinga-db-web-config: &icinga-db-web-config
  icingaweb.modules.icingadb.config.icingadb.resource: icingadb
  icingaweb.modules.icingadb.redis.redis1.host: icingadb-redis
  icingaweb.modules.icingadb.redis.redis1.port: 6379
  icingaweb.modules.icingadb.commandtransports.icinga2.host: icinga2
  icingaweb.modules.icingadb.commandtransports.icinga2.port: 5665
  icingaweb.modules.icingadb.commandtransports.icinga2.password: ${ICINGAWEB_ICINGA2_API_USER_PASSWORD:-icingaweb}
  icingaweb.modules.icingadb.commandtransports.icinga2.transport: api
  icingaweb.modules.icingadb.commandtransports.icinga2.username: icingaweb
  icingaweb.resources.icingadb.charset: utf8mb4
  icingaweb.resources.icingadb.db: mysql
  icingaweb.resources.icingadb.dbname: icingadb
  icingaweb.resources.icingadb.host: mysql
  icingaweb.resources.icingadb.password: ${ICINGADB_MYSQL_PASSWORD:-icingadb}
  icingaweb.resources.icingadb.type: db
  icingaweb.resources.icingadb.username: icingadb

x-icinga-director-config: &icinga-director-config
  icingaweb.modules.director.config.db.resource: director-mysql
  icingaweb.modules.director.kickstart.config.endpoint: icinga2
  icingaweb.modules.director.kickstart.config.host: icinga2
  icingaweb.modules.director.kickstart.config.port: 5665
  icingaweb.modules.director.kickstart.config.username: icingaweb
  icingaweb.modules.director.kickstart.config.password: ${ICINGAWEB_ICINGA2_API_USER_PASSWORD:-icingaweb}
  icingaweb.resources.director-mysql.charset: utf8mb4
  icingaweb.resources.director-mysql.db: mysql
  icingaweb.resources.director-mysql.dbname: director
  icingaweb.resources.director-mysql.host: mysql
  icingaweb.resources.director-mysql.password: ${ICINGA_DIRECTOR_MYSQL_PASSWORD:-director}
  icingaweb.resources.director-mysql.type: db
  icingaweb.resources.director-mysql.username: director

x-icinga-web-config: &icinga-web-config
  icingaweb.authentication.icingaweb2.backend: db
  icingaweb.authentication.icingaweb2.resource: icingaweb-mysql
  icingaweb.config.global.config_backend: db
  icingaweb.config.global.config_resource: icingaweb-mysql
  icingaweb.config.global.module_path: /usr/share/icingaweb2/modules
  icingaweb.config.logging.log: php
  icingaweb.groups.icingaweb2.backend: db
  icingaweb.groups.icingaweb2.resource: icingaweb-mysql
  icingaweb.passwords.icingaweb2.icingaadmin: icinga
  icingaweb.resources.icingaweb-mysql.charset: utf8mb4
  icingaweb.resources.icingaweb-mysql.db: mysql
  icingaweb.resources.icingaweb-mysql.dbname: icingaweb
  icingaweb.resources.icingaweb-mysql.host: mysql
  icingaweb.resources.icingaweb-mysql.password: icingaweb
  icingaweb.resources.icingaweb-mysql.type: db
  icingaweb.resources.icingaweb-mysql.username: icingaweb
  icingaweb.roles.Administrators.groups: Administrators
  icingaweb.roles.Administrators.permissions: '*'
  icingaweb.roles.Administrators.users: icingaadmin

x-icinga2-environment: &icinga2-environment
  ICINGA_CN: icinga2
  ICINGA_MASTER: 1

x-logging: &default-logging
  driver: "json-file"
  options:
    max-file: "10"
    max-size: "1M"

networks:
  net:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-icinga
    ipam:
      driver: default
      config:
        - subnet: "${V4_PREFIX:-172.29.0}.0/24"
          gateway: "${V4_PREFIX:-172.29.0}.1"

volumes:
  icinga2:
  icingaweb:
  mysql:

services:
  mysql:
    hostname: mariadb.icinga
    image: mariadb:11.8
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-icingaroot}
      ICINGADB_MYSQL_PASSWORD: ${ICINGADB_MYSQL_PASSWORD:-icingadb}
      ICINGAWEB_MYSQL_PASSWORD: ${ICINGAWEB_MYSQL_PASSWORD:-icingaweb}
      ICINGA_DIRECTOR_MYSQL_PASSWORD: ${ICINGA_DIRECTOR_MYSQL_PASSWORD:-director}
    restart: unless-stopped
    logging: *default-logging
    healthcheck:
      test: ["CMD-SHELL", "mariadb-admin ping -uroot -p$$MYSQL_ROOT_PASSWORD --protocol=tcp || exit 1"]
      interval: 10s
      retries: 5
      timeout: 10s
      start_period: 90s
    volumes:
      - mysql:/var/lib/mysql
      - ./env/mysql/:/docker-entrypoint-initdb.d/
    networks:
      net:
        ipv4_address: "${V4_PREFIX:-172.29.0}.10"

  icingadb-redis:
    hostname: redis.icinga
    image: redis:alpine
#    image: docker.dragonflydb.io/dragonflydb/dragonfly
    restart: unless-stopped
    logging: *default-logging
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep -q PONG"]
      interval: 5s
      timeout: 3s
      retries: 20
    depends_on:
      mysql:  { condition: service_healthy }
    networks:
      net:
        ipv4_address: "${V4_PREFIX:-172.29.0}.11"

  icingadb:
    hostname: db.icinga
    image: icinga/icingadb
    environment:
      ICINGADB_DATABASE_HOST: mysql
      ICINGADB_DATABASE_PORT: 3306
      ICINGADB_DATABASE_DATABASE: icingadb
      ICINGADB_DATABASE_USER: icingadb
      ICINGADB_DATABASE_PASSWORD: ${ICINGADB_MYSQL_PASSWORD:-icingadb}
      ICINGADB_REDIS_HOST: icingadb-redis
      ICINGADB_REDIS_PORT: 6379
    healthcheck:
      test: ["CMD", "icingadb", "--version"]
      interval: 30s
      timeout: 3s
      retries: 5
      start_period: 30s
    depends_on:
      mysql:          { condition: service_healthy }
      icingadb-redis: { condition: service_healthy }
    restart: unless-stopped
    logging: *default-logging
    networks:
      net:
        ipv4_address: "${V4_PREFIX:-172.29.0}.12"

  # Jednorázový init kontejner – NESMÍ se restartovat do smyčky
  init-icinga2:
    hostname: icingainit.icinga
    image: icinga/icinga2
    command: [ "/config/init-icinga2.sh" ]
    environment: *icinga2-environment
    restart: "no"
    logging: *default-logging
    volumes:
      - icinga2:/data
      - ./icingadb.conf:/config/icingadb.conf
      - ./icingaweb-api-user.conf:/config/icingaweb-api-user.conf
      - ./init-icinga2.sh:/config/init-icinga2.sh
    networks:
      net:
        ipv4_address: "${V4_PREFIX:-172.29.0}.13"

  icingaweb:
    hostname: web.icinga
    image: icinga/icingaweb2
    environment:
      icingaweb.enabledModules: director, icingadb, incubator
      <<: [*icinga-db-web-config, *icinga-director-config, *icinga-web-config]
    depends_on:
      mysql:
        condition: service_healthy
        restart: true
      icingadb:
        condition: service_healthy
        restart: true
    healthcheck:
      test:
        - CMD-SHELL
        - >
          pgrep apache2|grep . -q
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 20s
    restart: unless-stopped
    logging: *default-logging
    ports:
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
        host_ip: "127.0.0.3"
    volumes:
      - icingaweb:/data
    networks:
      net:
        ipv4_address: "${V4_PREFIX:-172.29.0}.14"

  icinga2:
    hostname: api.icinga
    image: icinga/icinga2
    command: [ "sh", "-c", "sleep 5; icinga2 daemon" ]
    entrypoint: []
    environment: *icinga2-environment
    depends_on:
      init-icinga2:
        condition: service_completed_successfully
      icingadb-redis:
        condition: service_healthy
        restart: true
      icingaweb:
        condition: service_healthy
        restart: true
    restart: unless-stopped
    healthcheck:
      test:
        - CMD-SHELL
        - >
          ps aux | grep '/icinga2' | grep -wq daemon
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 20s
    logging: *default-logging
    ports:
      - target: 5665
        published: 5665
        protocol: tcp
        mode: host
        host_ip: "127.0.0.3"
    volumes:
      - icinga2:/data
      - ./icinga2.conf.d:/custom_data/custom.conf.d
    networks:
      net:
        ipv4_address: "${V4_PREFIX:-172.29.0}.15"

  director:
    hostname: director.icinga
    image: icinga/icingaweb2
    entrypoint: []
    command:
      - /bin/bash
      - -ce
      - |
        echo "Testing the database connection. Container could restart."
        (echo > /dev/tcp/mysql/3306)
        echo "Testing the Icinga 2 API connection. Container could restart."
        (echo > /dev/tcp/icinga2/5665)
        icingacli director migration run
        (icingacli director kickstart required && icingacli director kickstart run && icingacli director config deploy) || true
        echo "Starting Icinga Director daemon."
        icingacli director daemon run
    depends_on:
      mysql:          { condition: service_healthy }
      icingadb-redis: { condition: service_healthy }
      icingadb:       { condition: service_healthy }
      init-icinga2:   { condition: service_completed_successfully }
      icinga2:        { condition: service_healthy }
      icingaweb:      { condition: service_healthy }
    restart: unless-stopped
    logging: *default-logging
    healthcheck:
      test:
        - CMD-SHELL
        - >
          ps aux|grep icinga::director|grep -wq connected
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 60s
    volumes:
      - icingaweb:/data
    networks:
      net:
        ipv4_address: "${V4_PREFIX:-172.29.0}.16"
